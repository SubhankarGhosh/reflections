How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could make out where the typo was and thus how the bug crept into the code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could help me identify where the bug was introduced in the code and thus correct it.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: 1 commit per logical change
    Cons: Should not forget to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is primarily aimed at software projects while Google Docs, Dropbox, etc are targeted at stand-alone files.

How can you use the commands git log and git diff to view the history of files?

    git log shows the history of all the commits made to a repository. git diff is used to compare the state of the repository after two different commits, i.e. it shows the changes made in a particular commit.

How might using version control make you more confident to make changes that
could break something?

    I can play around with the code freely. If it ever breaks I can checkout to a previous commit and fix the bug.

Now that you have your workspace set up, what do you want to try using Git for?

    My projects
